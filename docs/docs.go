// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Markin Sergey",
            "email": "markin-2002@yandex.ru"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/create": {
            "post": {
                "description": "Create a new game session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Games"
                ],
                "summary": "Create Game Session",
                "operationId": "Create-game",
                "parameters": [
                    {
                        "description": "Field size",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/games.RequestFieldSize"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Status Created",
                        "schema": {
                            "$ref": "#/definitions/games.ResponseCreate"
                        }
                    },
                    "418": {
                        "description": "Failed to save session",
                        "schema": {
                            "$ref": "#/definitions/apperror.AppError"
                        }
                    }
                }
            }
        },
        "/game/{game_id}": {
            "post": {
                "description": "Making moves and determining the winner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Games"
                ],
                "summary": "Game Progress",
                "operationId": "Game-progress",
                "parameters": [
                    {
                        "type": "string",
                        "description": "game_token",
                        "name": "Cookie",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "game_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User's move",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/games.RequestComb"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "move made",
                        "schema": {
                            "$ref": "#/definitions/games.ResponseGame"
                        }
                    },
                    "403": {
                        "description": "no such session exists",
                        "schema": {
                            "$ref": "#/definitions/apperror.AppError"
                        }
                    },
                    "418": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/games.ResponseGame"
                        }
                    }
                }
            }
        },
        "/join/{session_id}": {
            "get": {
                "description": "Connect to the created game session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Games"
                ],
                "summary": "Join to Game Session",
                "operationId": "Join-game",
                "parameters": [
                    {
                        "type": "string",
                        "description": "game_token",
                        "name": "Cookie",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "session_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "connection to the session was successful",
                        "schema": {
                            "$ref": "#/definitions/games.ResponseJoin"
                        }
                    },
                    "418": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/apperror.AppError"
                        }
                    }
                }
            }
        },
        "/list": {
            "get": {
                "description": "Getting a list of available game sessions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Games"
                ],
                "summary": "Get List",
                "operationId": "Get-list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "apperror.AppError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "developer_message": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "games.RequestComb": {
            "type": "object",
            "properties": {
                "col": {
                    "type": "integer"
                },
                "row": {
                    "type": "integer"
                }
            }
        },
        "games.RequestFieldSize": {
            "type": "object",
            "properties": {
                "size": {
                    "type": "integer"
                }
            }
        },
        "games.ResponseCreate": {
            "type": "object",
            "properties": {
                "err": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "session_id": {
                    "type": "string"
                }
            }
        },
        "games.ResponseGame": {
            "type": "object",
            "properties": {
                "err": {
                    "type": "string"
                },
                "field": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "winner": {
                    "type": "integer"
                }
            }
        },
        "games.ResponseJoin": {
            "type": "object",
            "properties": {
                "err": {
                    "type": "string"
                },
                "game_id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.1",
	Host:             "127.0.0.1:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Simple Web Games",
	Description:      "Web service for playing turn-based games",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
